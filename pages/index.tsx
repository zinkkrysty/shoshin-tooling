import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useState, useEffect, useRef, useCallback, useMemo} from 'react';
import simulator from "./simulator";
import MechState, { MechStatus, MechType } from '../src/types/MechState';
import AtomState, { AtomStatus, AtomType } from '../src/types/AtomState';
import AtomFaucetState from '../src/types/AtomFaucetState';
import AtomSinkState from '../src/types/AtomSinkState';
import BoardConfig from '../src/types/BoardConfig';
import Frame from '../src/types/Frame';
import Unit from './unit';
import UnitState, {BgStatus, BorderStatus, UnitText} from '../src/types/UnitState';
import Grid from '../src/types/Grid';
import Operator, { OperatorType, OPERATOR_TYPES } from '../src/types/Operator';
import Delivery from './delivery'
import Summary from './summary';
import Tutorial from './tutorial';
import MechInput from '../src/components/MechInput';
import { isIdenticalGrid, isGridOOB, areGridsNeighbors } from '../src/helpers/gridHelpers';
import OperatorGridBg from '../src/components/OperatorGridBg';
import { DIM, PROGRAM_SIZE_MAX, DEMO_SOLUTIONS, INSTRUCTION_ICON_MAP } from '../src/constants/constants';
import { useTranslation } from 'react-i18next';
import "../config/i18n"
import LanguageSelector from '../src/components/LanguageSelector';
import ConnectWalletStardisc from '../src/components/ConnectWalletStardisc'
import { useAccount, useStarknetExecute } from '@starknet-react/core'
import packSolution, { programsToInstructionSets } from '../src/helpers/packSolution';
import { SIMULATOR_ADDR } from '../src/components/SimulatorContract';
import Solution from '../src/types/Solution';
import Leaderboard from '../src/components/Leaderboard';
import { createTheme, ThemeProvider, Tooltip } from '@mui/material';
import {
    saveSolutionToLocal,
    getSolutionFromLocal,
    getNamespaceFromLocal,
    removeSolutionFromLocal,
} from '../src/helpers/localStorage'
import SavedSolutionElement from '../src/components/savedSolutionElement';
import { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';
import { reorder } from '../src/helpers/reorder';

const theme = createTheme({
    typography: {
        fontFamily: "Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;"
    },
    palette: {
        primary: {
            main: "#FFFE71",
        },
        secondary: {
            main: "#2d4249",
        },
        info: {
            main: "#848f98",
        }
    },
    components: {
        MuiButton: {
            styleOverrides: {
                outlinedPrimary: {
                    color: "black",
                }
            }
        }
    }
});

export default function Home() {

    // Render
    return (
        <div className={styles.container}>
            <Head>
                <title>Shoshin Tooling</title>
                <meta name="shoshin-tooling" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <ThemeProvider theme={theme}>
                <main className={styles.main}>
                    <div className={styles.title}>
                        <h2>Shoshin Tooling</h2>
                    </div>
                </main>
            </ThemeProvider>
        </div>
    )
}
