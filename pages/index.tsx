import Head from 'next/head'
import styles from '../styles/Home.module.css'
import React, {useState, useEffect, useRef, useCallback, useMemo} from 'react';
import { createTheme, ThemeProvider, Tooltip } from '@mui/material';
import Character from '../src/components/Character';
import testJsonStr from '../src/json/test_engine.json';

const theme = createTheme({
    typography: {
        fontFamily: "Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;"
    },
    palette: {
        primary: {
            main: "#FFFE71",
        },
        secondary: {
            main: "#2d4249",
        },
        info: {
            main: "#848f98",
        }
    },
    components: {
        MuiButton: {
            styleOverrides: {
                outlinedPrimary: {
                    color: "black",
                }
            }
        }
    }
});

export default function Home() {

    // Each frame takes the following structure:
    // - agent_action
    // - agent_state (Mental)
    // - character_state (Physics): pos [x,y], vel_fp [x,y], acc_fp [x,y], dir
    // - hitboxes: action (origin [x,y], dimension [x,y]), body (origin [x,y], dimension [x,y])
    // - object_counter
    // - object_state (Body)
    // - stimulus

    const testJson = JSON.parse(testJsonStr)
    if (!testJson) return <></>

    const frameCount = testJson.agent_0.length
    const [loop, setLoop] = useState<NodeJS.Timer>();
    const [frameIndex, setFrameIndex] = useState<number>(0);
    const latency = 200;

    useEffect(() => {
        setLoop(
            setInterval(() => {
                setFrameIndex((prev) => prev == frameCount ? 0 : prev + 1);
            }, latency)
        );
    }, [])

    // Render
    return (
        <div className={styles.container}>
            <Head>
                <title>Shoshin Tooling</title>
                <meta name="shoshin-tooling" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <ThemeProvider theme={theme}>
                <main className={styles.main}>

                    <Character agentIndex={0} frameIndex={frameIndex} />

                </main>
            </ThemeProvider>
        </div>
    )
}
